@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
    font-family: "Poppins";
    src: url("./lib/fonts/poppins/Poppins-Regular.ttf");
}

* {
    scroll-behavior: smooth;
}

body, main {
    overflow-x: hidden;
    scroll-behavior: smooth; 
    font-family: "Poppins";
}

html:has(.drawer-toggle:checked) {
    overflow-y: hidden;
    scrollbar-gutter:unset;
}

[data-theme="dark"] .btn {
  @apply bg-red-500;
}

:root:has(:is(.modal-open, .modal:target, .modal-toggle:checked + .modal, .modal[open])) {
    overflow-y: hidden;
    scrollbar-gutter: unset;
}

@layer utilities {
    .btn.bg-accent:hover, .btn.btn-accent:hover {
        @apply bg-base-content text-base-100 border-0;
        img {
            @apply filter invert;
        }
    }

    .btn:hover {
        @apply text-base-content;
    }
}

@layer components {

    .bb {
        @apply border border-black;
    }

    .icon {
        @apply filter dark:invert;
    }
    
    .red-filter {
        filter: brightness(0) saturate(100%) invert(38%) sepia(93%) saturate(2710%) hue-rotate(339deg) brightness(102%) contrast(86%);
    }

    @media (prefers-reduced-motion: no-preference) {
        .animate-pop {
            animation: button-pop var(--animation-btn, 0.25s)ease-out;
        }
    }

    @keyframes fade {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .animate-pop-delayed {
        --delay: 0ms;
        opacity: 0;
        animation: fade 0.1s ease-in-out forwards, button-pop var(--animation-btn, 0.25s) ease-out;
        animation-delay: var(--delay);
    }

    @keyframes slideX {
        from {
            opacity: 0;
            transform: translateX(20px); /* Start 20px below */
        }
        to {
            opacity: 1;
            transform: translateX(0); /* End at original position */
        }
    }

    @keyframes slide-X {
        from {
            opacity: 0;
            transform: translateX(-20px); /* Start 20px below */
        }
        to {
            opacity: 1;
            transform: translateX(0); /* End at original position */
        }
    }

    /* Apply the animation to the items */
    .animate-x {
        --delay: 0ms;
        opacity: 0; /* Start invisible */
        animation: slideX 0.3s ease-in-out forwards; /* Animation properties */
        animation-delay: var(--delay);
    }

    /* Apply the animation to the items */
    .animate--x {
        --delay: 0ms;
        opacity: 0; /* Start invisible */
        animation: slide-X 0.3s ease-in-out forwards; /* Animation properties */
        animation-delay: var(--delay);
    }
    
    @-webkit-keyframes scale-down-hor-left{0%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:0 0;transform-origin:0 0}100%{-webkit-transform:scaleX(.3);transform:scaleX(.3);-webkit-transform-origin:0 0;transform-origin:0 0}}@keyframes scale-down-hor-left{0%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:0 0;transform-origin:0 0}100%{-webkit-transform:scaleX(.3);transform:scaleX(.3);-webkit-transform-origin:0 0;transform-origin:0 0}}
    .animat-scale-down-hor-left{-webkit-animation:scale-down-hor-left .4s cubic-bezier(.25,.46,.45,.94) both;animation:scale-down-hor-left .4s cubic-bezier(.25,.46,.45,.94) both}

}

/* Define a custom component class */
/* .custom-translate-y {
  @apply animate-slideUp;
  transform: translateY(var(--translate-y, 0));
} */

/* Define the animation */
/* @keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(var(--translate-y-start, 20px));
  }
  to {
    opacity: 1;
    transform: translateY(var(--translate-y, 0));
  }
} */

/* <div class="custom-translate-y" style="--translate-y: 50px; --translate-y-start: 100px;">
  Item 1
</div> */